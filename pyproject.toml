[build-system]
requires = ["setuptools>=58.0.4", "wheel>=0.37.0"]
build-backend = "setuptools.build_meta"

[project]
name = "GenieBot"
description = ""
version = "0.0.1"
authors = [
    { name = "nikoontelegram", email = "nikoontelegram@gmail.com" },
]
license = { text = "MIT" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "python-telegram-bot>=13.6",
    "pydantic>=2.7",
    "pydantic-settings>=2.0",
    "SQLAlchemy>=1.4.23",
]
requires-python = ">=3.11"

[project.optional-dependencies]
tests = [
    "telethon>=1.20",
]

[tool.setuptools]
packages = ["src"]
package-dir = {"src" = "src"}

[project.scripts]
bot-run = "src.main:main"

[tool.black]
line-length = 120
target-version = ['py311']
skip-string-normalization = true

[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D",
  "TD",
  "FIX",
  "ANN",
  "E501",
  "COM812",
  "ISC001",
  "INP001",
]
unfixable = [
  "F",
  "ERA",
]
allowed-confusables = [
  "а", "А", "б", "Б", "в", "В", "г", "Г", "е", "Е", "з", "З", "и", "И", "к", "К", "м", "М",
  "н", "Н", "о", "О", "р", "Р", "с", "С", "т", "Т", "у", "У", "ф", "Ф", "х", "Х"
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "ARG001"]
"tests/**/*.py" = ["S101", "S105", "S106", "PLR2004"]
"src/ass.py" = ["ALL"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-boolean-trap]
extend-allowed-calls = ["pydantic.Field", "django.db.models.Value"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query", "fastapi.Path", "fastapi.Body", "fastapi_filter.FilterDepends"]

[tool.ruff.lint.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]

[tool.ruff.lint.isort]
section-order = ["future", "typing", "standard-library", "third-party", "first-party", "local-folder"]
lines-between-types = 1
split-on-trailing-comma = false

[tool.ruff.lint.isort.sections]
"typing" = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
  "pydantic.validator",
  "declared_attr",
  "expression",
  "comparator",
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
allow-dunder-method-names = ["__tablename__", "__table_args__"]
allow-magic-value-types = ["int", "str", "bytes"]
max-args = 10
max-statements = 30

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"
quote-style = "double"
skip-magic-trailing-comma = true
